[{"/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/App.js":"1","/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/components/navbar.js":"2","/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/reportWebVitals.js":"3","/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/index.js":"4","/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/components/Navbar.js":"5","/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/components/BlogCard.js":"6","/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/pages/HomePage.js":"7","/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/pages/DetailPage.js":"8","/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/components/CardDetail.js":"9","/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/router/Router.js":"10","/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/pages/Register.js":"11","/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/pages/Login.js":"12","/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/pages/ProfilePage.js":"13","/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/components/CardList.js":"14","/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/pages/PostPage.js":"15","/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/pages/UpdatePage.js":"16","/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/services/PostData.js":"17","/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/context/AuthContext.js":"18","/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/helper/FetchData.js":"19","/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/components/MenuComponent.js":"20","/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/components/PaginationButtons.js":"21","/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/components/SliderComponent.js":"22","/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/components/SliderText.js":"23","/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/components/Footer.js":"24"},{"size":227,"mtime":1611840870651,"results":"25","hashOfConfig":"26"},{"size":4391,"mtime":1611575212229,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":1611502682168,"results":"28","hashOfConfig":"26"},{"size":507,"mtime":1612297436071,"results":"29","hashOfConfig":"26"},{"size":6204,"mtime":1612288440031,"results":"30","hashOfConfig":"26"},{"size":4410,"mtime":1612471886521,"results":"31","hashOfConfig":"26"},{"size":1192,"mtime":1612453044046,"results":"32","hashOfConfig":"26"},{"size":2029,"mtime":1612290638606,"results":"33","hashOfConfig":"26"},{"size":7073,"mtime":1612291580465,"results":"34","hashOfConfig":"26"},{"size":1785,"mtime":1612453031380,"results":"35","hashOfConfig":"26"},{"size":6332,"mtime":1612289409918,"results":"36","hashOfConfig":"26"},{"size":5426,"mtime":1612453264063,"results":"37","hashOfConfig":"26"},{"size":8596,"mtime":1611998308625,"results":"38","hashOfConfig":"26"},{"size":834,"mtime":1612471335645,"results":"39","hashOfConfig":"26"},{"size":7861,"mtime":1612116854489,"results":"40","hashOfConfig":"26"},{"size":8592,"mtime":1612116922005,"results":"41","hashOfConfig":"26"},{"size":364,"mtime":1611786962239,"results":"42","hashOfConfig":"26"},{"size":1197,"mtime":1612126414419,"results":"43","hashOfConfig":"26"},{"size":1851,"mtime":1612040575942,"results":"44","hashOfConfig":"26"},{"size":5468,"mtime":1612298027527,"results":"45","hashOfConfig":"26"},{"size":1480,"mtime":1612471761422,"results":"46","hashOfConfig":"26"},{"size":1480,"mtime":1612205340185,"results":"47","hashOfConfig":"26"},{"size":1908,"mtime":1612471561597,"results":"48","hashOfConfig":"26"},{"size":1281,"mtime":1612453176759,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"indfn7",{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"57"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"57"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"57"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"57"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/App.js",[],["105","106"],"/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/components/navbar.js",["107"],"/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/reportWebVitals.js",[],["108","109"],"/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/index.js",[],"/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/components/Navbar.js",[],"/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/components/BlogCard.js",[],"/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/pages/HomePage.js",["110"],"/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/pages/DetailPage.js",["111","112"],"/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/components/CardDetail.js",[],"/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/router/Router.js",[],"/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/pages/Register.js",[],"/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/pages/Login.js",["113","114","115"],"/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/pages/ProfilePage.js",["116","117"],"import React, { useState, useEffect } from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport LocalMallIcon from \"@material-ui/icons/LocalMall\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport CKEditor from \"ckeditor4-react\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { putDataWithToken } from \"../helper/FetchData\";\r\nimport axios from \"axios\";\r\n\r\n//STYLE\r\n\r\nconst CssTextField = withStyles({\r\n  root: {\r\n    width: \"40%\",\r\n    \"& label.Mui-focused\": {\r\n      color: \"green\",\r\n    },\r\n    \"& .MuiInput-underline:after\": {\r\n      borderBottomColor: \"green\",\r\n    },\r\n    \"& .MuiOutlinedInput-root\": {\r\n      \"& fieldset\": {\r\n        borderColor: \"#cfccdf\",\r\n      },\r\n      \"&:hover fieldset\": {\r\n        borderColor: \"#e9967a\",\r\n      },\r\n      \"&.Mui-focused fieldset\": {\r\n        borderColor: \"green\",\r\n      },\r\n    },\r\n  },\r\n})(TextField);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100vh\",\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  form: {\r\n    marginTop: \"3rem\",\r\n    alignItems: \"center\",\r\n    paddingLeft: \"20%\",\r\n    paddingRight: \"5%\",\r\n  },\r\n  form2: {\r\n    marginTop: \"3rem\",\r\n    alignItems: \"center\",\r\n  },\r\n  margin: {\r\n    margin: 2,\r\n    marginTop: 13,\r\n  },\r\n  address: {\r\n    marginTop: 13,\r\n    margin: 2,\r\n    width: \"80.5%\",\r\n  },\r\n  bio: {\r\n    margin: 2,\r\n    marginTop: 13,\r\n  },\r\n  button: {\r\n    marginTop: 13,\r\n    width: \"80.7%\",\r\n  },\r\n}));\r\n\r\n// FUNCTION\r\n\r\nconst ProfilePage = () => {\r\n  const [data, setData] = useState();\r\n  const classes = useStyles();\r\n  const matches = useMediaQuery(\"(min-width:750px)\");\r\n\r\n  const history = useHistory();\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    first_name: Yup.string().max(200, \"Title is too long\"),\r\n    last_name: Yup.string().max(200, \"Title is too long\"),\r\n    address: Yup.string().max(200, \"Title is too long\"),\r\n    country: Yup.string().max(200, \"Title is too long\"),\r\n    phone: Yup.string().max(200, \"Title is too long\"),\r\n    bio: Yup.string().max(200, \"Title is too long\"),\r\n  });\r\n\r\n  const initialValues = {\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    country: \"\",\r\n    phone: \"\",\r\n    bio: \"\",\r\n    address: \"\",\r\n  };\r\n\r\n  const onSubmit = (values) => {\r\n    putDataWithToken(\r\n      \"https://blog-backend-ysf.herokuapp.com/user/profile/\",\r\n      values\r\n    )\r\n      .then((data) => {\r\n        history.push(\"/profile\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema,\r\n    onSubmit,\r\n  });\r\n\r\n  const fetchData = async () => {\r\n    const Token = localStorage.getItem(\"Token\");\r\n    const res = await axios.get(\r\n      `https://blog-backend-ysf.herokuapp.com/user/profile/`,\r\n      {\r\n        headers: {\r\n          Authorization: `Token ${Token}`,\r\n        },\r\n      }\r\n    );\r\n    formik.values.first_name = res?.data?.first_name;\r\n    formik.values.last_name = res?.data?.last_name;\r\n    formik.values.address = res?.data?.address;\r\n    formik.values.bio = res?.data?.bio;\r\n    formik.values.phone = res?.data?.phone;\r\n    formik.values.country = res?.data?.country;\r\n    setData(res?.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <Grid item xs={12} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LocalMallIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Profile\r\n          </Typography>\r\n          <form\r\n            className={matches ? classes.form : classes.form2}\r\n            onSubmit={formik.handleSubmit}\r\n          >\r\n            <CssTextField\r\n              defaultValue={data?.phone}\r\n              className={classes.margin}\r\n              style={{ width: matches ? \"40%\" : \"100%\" }}\r\n              variant=\"outlined\"\r\n              id=\"first_name\"\r\n              name=\"first_name\"\r\n              label=\"First Name\"\r\n              onChange={formik.handleChange}\r\n              value={formik.values.fist_name}\r\n              onBlur={formik.handleBlur}\r\n              {...formik.getFieldProps(\"first_name\")}\r\n              error={formik.touched.first_name && formik.errors.first_name}\r\n              helperText={formik.touched.first_name && formik.errors.first_name}\r\n            />\r\n            <CssTextField\r\n              className={classes.margin}\r\n              style={{ width: matches ? \"40%\" : \"100%\" }}\r\n              id=\"last_name\"\r\n              name=\"last_name\"\r\n              label=\"Last Name\"\r\n              variant=\"outlined\"\r\n              onChange={formik.handleChange}\r\n              value={formik.values.last_name}\r\n              onBlur={formik.handleBlur}\r\n              {...formik.getFieldProps(\"last_name\")}\r\n              error={formik.touched.last_name && formik.errors.last_name}\r\n              helperText={formik.touched.last_name && formik.errors.last_name}\r\n            />\r\n\r\n            <CssTextField\r\n              className={classes.margin}\r\n              style={{ width: matches ? \"40%\" : \"100%\" }}\r\n              variant=\"outlined\"\r\n              id=\"country\"\r\n              name=\"country\"\r\n              label=\"Country\"\r\n              onChange={formik.handleChange}\r\n              value={formik.values.country}\r\n              onBlur={formik.handleBlur}\r\n              {...formik.getFieldProps(\"country\")}\r\n              error={formik.touched.country && formik.errors.country}\r\n              helperText={formik.touched.country && formik.errors.country}\r\n            />\r\n\r\n            <CssTextField\r\n              className={classes.margin}\r\n              style={{ width: matches ? \"40%\" : \"100%\" }}\r\n              variant=\"outlined\"\r\n              id=\"phone\"\r\n              name=\"phone\"\r\n              label=\"Phone\"\r\n              onChange={formik.handleChange}\r\n              value={formik.values.phone}\r\n              onBlur={formik.handleBlur}\r\n              {...formik.getFieldProps(\"phone\")}\r\n              error={formik.touched.phone && formik.errors.phone}\r\n              helperText={formik.touched.phone && formik.errors.phone}\r\n            />\r\n            <CssTextField\r\n              className={classes.address}\r\n              style={{ width: matches ? \"80.7%\" : \"100%\" }}\r\n              variant=\"outlined\"\r\n              id=\"adress\"\r\n              name=\"address\"\r\n              label=\"Address\"\r\n              onChange={formik.handleChange}\r\n              value={formik.values.address}\r\n              onBlur={formik.handleBlur}\r\n              {...formik.getFieldProps(\"address\")}\r\n              error={formik.touched.address && formik.errors.address}\r\n              helperText={formik.touched.address && formik.errors.address}\r\n            />\r\n\r\n            <CssTextField\r\n              className={classes.bio}\r\n              style={{ width: matches ? \"80.7%\" : \"100%\" }}\r\n              variant=\"outlined\"\r\n              id=\"bio\"\r\n              name=\"bio\"\r\n              label=\"Biografy\"\r\n              multiline\r\n              rows={8}\r\n              onChange={formik.handleChange}\r\n              value={formik.values.bio}\r\n              onBlur={formik.handleBlur}\r\n              {...formik.getFieldProps(\"bio\")}\r\n              error={formik.touched.bio && formik.errors.bio}\r\n              helperText={formik.touched.bio && formik.errors.bio}\r\n            />\r\n\r\n            <Button\r\n              color=\"primary\"\r\n              style={{\r\n                width: matches ? \"80.7%\" : \"100%\",\r\n                marginTop: matches ? null : 30,\r\n              }}\r\n              variant=\"contained\"\r\n              fullWidth\r\n              type=\"submit\"\r\n              className={classes.button}\r\n            >\r\n              Update\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\nexport default ProfilePage;\r\n","/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/components/CardList.js",[],"/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/pages/PostPage.js",["118"],"import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport LocalMallIcon from \"@material-ui/icons/LocalMall\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport CKEditor from \"ckeditor4-react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useHistory } from \"react-router-dom\";\nimport { postDataWithToken } from \"../helper/FetchData\";\n\n// STYLE\n\nconst CssTextField = withStyles({\n  root: {\n    width: \"40%\",\n    \"& label.Mui-focused\": {\n      color: \"green\",\n    },\n    \"& .MuiInput-underline:after\": {\n      borderBottomColor: \"green\",\n    },\n    \"& .MuiOutlinedInput-root\": {\n      \"& fieldset\": {\n        borderColor: \"#cfccdf\",\n      },\n      \"&:hover fieldset\": {\n        borderColor: \"#e9967a\",\n      },\n      \"&.Mui-focused fieldset\": {\n        borderColor: \"green\",\n      },\n    },\n  },\n})(TextField);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    overflow: \"hidden\",\n  },\n\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.primary.main,\n  },\n  form: {\n    marginTop: \"3rem\",\n    alignItems: \"center\",\n    width: \"80%\",\n    paddingLeft: \"10%\",\n  },\n  form2: {\n    marginTop: \"3rem\",\n    alignItems: \"center\",\n    width: \"100%\",\n  },\n  margin: {\n    margin: 2,\n    marginTop: 13,\n  },\n  address: {\n    marginTop: 13,\n    margin: 2,\n    width: \"80.5%\",\n  },\n  bio: {\n    margin: 2,\n    marginTop: 13,\n  },\n  button: {\n    marginTop: 13,\n    width: \"80.7%\",\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 500,\n    display: \"block\",\n    marginLeft: -0.1,\n    width: \"40%\",\n    \"& label.Mui-focused\": {\n      color: \"green\",\n    },\n    \"& .MuiInput-underline:after\": {\n      borderBottomColor: \"green\",\n    },\n    \"& .MuiOutlinedInput-root\": {\n      \"& fieldset\": {\n        borderColor: \"#cfccdf\",\n      },\n      \"&:hover fieldset\": {\n        borderColor: \"#e9967a\",\n      },\n      \"&.Mui-focused fieldset\": {\n        borderColor: \"green\",\n      },\n    },\n  },\n}));\n\n//FUNCTION\n\nconst PostPage = () => {\n  const classes = useStyles();\n  const matches = useMediaQuery(\"(min-width:750px)\");\n\n  const history = useHistory();\n\n  const validationSchema = Yup.object().shape({\n    title: Yup.string()\n      .required(\"you must write a title\")\n      .max(100, \"Title is too long\"),\n    content: Yup.string().required(\"You must write something\"),\n    image: Yup.string(),\n    status: Yup.string(),\n  });\n\n  const initialValues = {\n    title: \"\",\n    content: \"\",\n    image: \"\",\n    status: \"\",\n  };\n\n  const onSubmit = (values) => {\n    postDataWithToken(\"https://blog-backend-ysf.herokuapp.com/create/\", values)\n      .then((data) => {\n        history.push(\"/\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const formik = useFormik({\n    initialValues,\n    validationSchema,\n    onSubmit,\n  });\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <Grid item xs={12} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LocalMallIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Create New Post\n          </Typography>\n          <form\n            className={matches ? classes.form : classes.form2}\n            onSubmit={formik.handleSubmit}\n          >\n            <CssTextField\n              className={classes.margin}\n              style={{ width: matches ? \"80.5%\" : \"100%\" }}\n              variant=\"outlined\"\n              id=\"title\"\n              name=\"title\"\n              label=\"Title\"\n              onChange={formik.handleChange}\n              value={formik.values.title}\n              onBlur={formik.handleBlur}\n              {...formik.getFieldProps(\"title\")}\n              error={formik.touched.title && formik.errors.title}\n              helperText={formik.touched.title && formik.errors.title}\n            />\n            <CssTextField\n              className={classes.margin}\n              style={{ width: matches ? \"80.5%\" : \"100%\" }}\n              id=\"image\"\n              name=\"image\"\n              label=\"Image URL\"\n              variant=\"outlined\"\n              onChange={formik.handleChange}\n              value={formik.values.image}\n              onBlur={formik.handleBlur}\n              {...formik.getFieldProps(\"image\")}\n              error={formik.touched.image && formik.errors.image}\n              helperText={formik.touched.image && formik.errors.image}\n            />\n            {/* {\n                matches\n                ?\n                <div className=\"App\" style={{  marginTop:20,width: matches ? \"80.5%\" : \"100%\" }}>\n            \n                <CKEditor\n                    id=\"content\"\n                    name = 'content'\n                    editor={ ClassicEditor }\n                    onChange={(event) => formik.handleChange(event)}\n                    value = {formik.values.content}\n                    onBlur={(event) => formik.handleBlur(event)}\n                    {...formik.getFieldProps('content')}\n                    error={formik.touched.content && formik.errors.content }\n                   type=\"classic\"\n                  //  data =  {formik.values.content}\n                   readOnly={false}\n                />\n            </div>\n                : */}\n            <CssTextField\n              className={classes.margin}\n              style={{ width: matches ? \"80.5%\" : \"100%\" }}\n              variant=\"outlined\"\n              multiline\n              rows={8}\n              id=\"content\"\n              name=\"content\"\n              label=\"Content\"\n              onChange={formik.handleChange}\n              value={formik.values.content}\n              onBlur={formik.handleBlur}\n              {...formik.getFieldProps(\"content\")}\n              error={formik.touched.content && formik.errors.content}\n              helperText={formik.touched.content && formik.errors.content}\n            />\n\n            <FormControl variant=\"outlined\" className={classes.formControl}>\n              <InputLabel htmlFor=\"outlined-age-native-simple\">\n                Status\n              </InputLabel>\n              <Select\n                native\n                value={formik.values.status}\n                onChange={formik.handleChange}\n                label=\"Status\"\n                name=\"status\"\n                inputProps={{\n                  name: \"status\",\n                  id: \"outlined-age-native-simple\",\n                }}\n              >\n                <option aria-label=\"None\" value=\"\" />\n                <option value={\"d\"} label=\"draft\" />\n                <option value={\"p\"} label=\"published\" />\n              </Select>\n            </FormControl>\n            <Button\n              color=\"primary\"\n              style={{\n                width: matches ? \"80.7%\" : \"100%\",\n                marginTop: matches ? null : 30,\n              }}\n              variant=\"contained\"\n              fullWidth\n              type=\"submit\"\n              className={classes.button}\n            >\n              Create\n            </Button>\n          </form>\n        </div>\n      </Grid>\n    </Grid>\n  );\n};\nexport default PostPage;\n","/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/pages/UpdatePage.js",["119","120","121"],"import React, { useEffect, useState } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport LocalMallIcon from \"@material-ui/icons/LocalMall\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport CKEditor from \"ckeditor4-react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useHistory } from \"react-router-dom\";\nimport { putDataWithToken } from \"../helper/FetchData\";\nimport { toast } from \"react-toastify\";\nimport axios from \"axios\";\nimport { useParams } from \"react-router-dom\";\n\n//STYLE\n\nconst CssTextField = withStyles({\n  root: {\n    width: \"40%\",\n    \"& label.Mui-focused\": {\n      color: \"green\",\n    },\n    \"& .MuiInput-underline:after\": {\n      borderBottomColor: \"green\",\n    },\n    \"& .MuiOutlinedInput-root\": {\n      \"& fieldset\": {\n        borderColor: \"#cfccdf\",\n      },\n      \"&:hover fieldset\": {\n        borderColor: \"#e9967a\",\n      },\n      \"&.Mui-focused fieldset\": {\n        borderColor: \"green\",\n      },\n    },\n  },\n})(TextField);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    overflow: \"hidden\",\n  },\n\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.primary.main,\n  },\n  form: {\n    marginTop: \"3rem\",\n    alignItems: \"center\",\n    width: \"80%\",\n    paddingLeft: \"10%\",\n  },\n  form2: {\n    marginTop: \"3rem\",\n    alignItems: \"center\",\n    width: \"100%\",\n  },\n  margin: {\n    margin: 2,\n    marginTop: 13,\n  },\n  address: {\n    marginTop: 13,\n    margin: 2,\n    width: \"80.5%\",\n  },\n  bio: {\n    margin: 2,\n    marginTop: 13,\n  },\n  button: {\n    marginTop: 13,\n    width: \"80.7%\",\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 500,\n    display: \"block\",\n    marginLeft: -0.1,\n    width: \"40%\",\n    \"& label.Mui-focused\": {\n      color: \"green\",\n    },\n    \"& .MuiInput-underline:after\": {\n      borderBottomColor: \"green\",\n    },\n    \"& .MuiOutlinedInput-root\": {\n      \"& fieldset\": {\n        borderColor: \"#cfccdf\",\n      },\n      \"&:hover fieldset\": {\n        borderColor: \"#e9967a\",\n      },\n      \"&.Mui-focused fieldset\": {\n        borderColor: \"green\",\n      },\n    },\n  },\n}));\n\n//FUNCTION\n\nconst UpdatePage = () => {\n  const [data, setData] = useState();\n  const classes = useStyles();\n  const matches = useMediaQuery(\"(min-width:750px)\");\n\n  const history = useHistory();\n  const { slug } = useParams();\n\n  const fetchData = async () => {\n    const res = await axios.get(\n      `https://blog-backend-ysf.herokuapp.com/${slug}/detail`\n    );\n    formik.values.title = res?.data?.title;\n    formik.values.image = res?.data?.image;\n    formik.values.content = res?.data?.content;\n    formik.values.status = res?.data?.status;\n    setData(res?.data);\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const validationSchema = Yup.object().shape({\n    title: Yup.string()\n      .required(\"you must write a title\")\n      .max(100, \"Title is too long\"),\n    content: Yup.string().required(\"You must write something\"),\n    image: Yup.string(),\n    status: Yup.string(),\n  });\n\n  const initialValues = {\n    title: \"\",\n    content: \"\",\n    image: \"\",\n    status: \"\",\n  };\n\n  const onSubmit = (values) => {\n    const response = putDataWithToken(\n      `https://blog-backend-ysf.herokuapp.com/${slug}/update/`,\n      values\n    )\n      .then((data) => {\n        history.push(`/${slug}/detail/`);\n      })\n      .catch((err) => {\n        toast.error(err.message || \" an error occured\");\n      });\n  };\n\n  const formik = useFormik({\n    initialValues,\n    validationSchema,\n    onSubmit,\n  });\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <Grid item xs={12} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LocalMallIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Update Post\n          </Typography>\n          <form\n            className={matches ? classes.form : classes.form2}\n            onSubmit={formik.handleSubmit}\n          >\n            <CssTextField\n              defaultValue={data?.title}\n              className={classes.margin}\n              style={{ width: matches ? \"80.5%\" : \"100%\" }}\n              variant=\"outlined\"\n              id=\"title\"\n              name=\"title\"\n              label=\"Title\"\n              onChange={formik.handleChange}\n              value={formik.values.title}\n              onBlur={formik.handleBlur}\n              {...formik.getFieldProps(\"title\")}\n              error={formik.touched.title && formik.errors.title}\n              helperText={formik.touched.title && formik.errors.title}\n            />\n            <CssTextField\n              className={classes.margin}\n              style={{ width: matches ? \"80.5%\" : \"100%\" }}\n              id=\"image\"\n              name=\"image\"\n              label=\"Image URL\"\n              variant=\"outlined\"\n              onChange={formik.handleChange}\n              value={formik.values.image}\n              onBlur={formik.handleBlur}\n              {...formik.getFieldProps(\"image\")}\n              error={formik.touched.image && formik.errors.image}\n              helperText={formik.touched.image && formik.errors.image}\n            />\n            {/* {\n                matches\n                ?\n                <div className=\"App\" style={{  marginTop:20,width: matches ? \"80.5%\" : \"100%\" }}>\n            \n                <CKEditor\n                    id=\"content\"\n                    name = 'content'\n                    editor={ ClassicEditor }\n                    onChange={(event) => formik.handleChange(event)}\n                    value = {formik.values.content}\n                    onBlur={(event) => formik.handleBlur(event)}\n                    {...formik.getFieldProps('content')}\n                    error={formik.touched.content && formik.errors.content }\n                   type=\"classic\"\n                  //  data =  {formik.values.content}\n                   readOnly={false}\n                />\n            </div>\n                : */}\n            <CssTextField\n              className={classes.margin}\n              style={{ width: matches ? \"80.5%\" : \"100%\" }}\n              variant=\"outlined\"\n              multiline\n              rows={8}\n              id=\"content\"\n              name=\"content\"\n              label=\"Content\"\n              onChange={formik.handleChange}\n              value={formik.values.content}\n              onBlur={formik.handleBlur}\n              {...formik.getFieldProps(\"content\")}\n              error={formik.touched.content && formik.errors.content}\n              helperText={formik.touched.content && formik.errors.content}\n            />\n\n            <FormControl variant=\"outlined\" className={classes.formControl}>\n              <InputLabel htmlFor=\"outlined-age-native-simple\">\n                Status\n              </InputLabel>\n              <Select\n                native\n                value={formik.values.status}\n                onChange={formik.handleChange}\n                label=\"Status\"\n                name=\"status\"\n                inputProps={{\n                  name: \"status\",\n                  id: \"outlined-age-native-simple\",\n                }}\n              >\n                <option aria-label=\"None\" value=\"\" />\n                <option value={\"d\"} label=\"draft\" />\n                <option value={\"p\"} label=\"published\" />\n              </Select>\n            </FormControl>\n            <Button\n              color=\"primary\"\n              style={{\n                width: matches ? \"80.7%\" : \"100%\",\n                marginTop: matches ? null : 30,\n              }}\n              variant=\"contained\"\n              fullWidth\n              type=\"submit\"\n              className={classes.button}\n            >\n              Update\n            </Button>\n          </form>\n        </div>\n      </Grid>\n    </Grid>\n  );\n};\nexport default UpdatePage;\n","/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/services/PostData.js",[],"/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/context/AuthContext.js",[],"/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/helper/FetchData.js",[],["122","123"],"/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/components/MenuComponent.js",["124","125"],"import React,{ useState,useRef } from \"react\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport Link from \"@material-ui/core/Link\";\nimport axios from \"axios\";\nimport Modal from \"@material-ui/core/Modal\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { useHistory } from \"react-router-dom\";\n\n// STYLE\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: \"absolute\",\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    textAlign: \"center\",\n  },\n  paper1: {\n    position: \"absolute\",\n    width: 200,\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    marginLeft: 8,\n    textAlign: \"center\",\n  },\n  container: {\n    position: \"absolute\",\n    top: 130,\n    right: 160,\n  },\n  container1: {\n    position: \"absolute\",\n    top: 130,\n    right: 20,\n  },\n  menuText: {\n    fontSize: 15,\n  },\n  menuText1: {\n    fontSize: 12,\n  },\n  modalText: {\n    fontSize: 15,\n    marginRight: 10,\n  },\n  modalText1: {\n    fontSize: 12,\n    marginLeft: 10,\n  },\n}));\n\nconst StyledMenu = withStyles({\n  paper: {\n    border: \"1px solid #d3d4d5\",\n  },\n})((props) => (\n  <Menu\n    elevation={0}\n    getContentAnchorEl={null}\n    anchorOrigin={{\n      vertical: \"bottom\",\n      horizontal: \"center\",\n    }}\n    transformOrigin={{\n      vertical: \"top\",\n      horizontal: \"center\",\n    }}\n    {...props}\n  />\n));\n\nconst StyledMenuItem = withStyles((theme) => ({\n  root: {\n    \"&:focus\": {\n      backgroundColor: theme.palette.primary.main,\n      \"& .MuiListItemIcon-root, & .MuiListItemText-primary\": {\n        color: theme.palette.common.white,\n      },\n    },\n  },\n}))(MenuItem);\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\n// COMPONENT\n\nexport default function MenuComponent({ slug }) {\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [open, setOpen] = useState(false);\n  const classes = useStyles();\n  const history = useHistory();\n  // getModalStyle is not a pure function, we roll the style only on the first render\n  const [modalStyle] = useState(getModalStyle);\n  const matches = useMediaQuery(\"(min-width:750px)\");\n\n\n  \n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleOpenModal = () => {\n    setOpen(true);\n  };\n\n  const handleCloseModal = () => {\n    setOpen(false);\n  };\n\n  const onDelete = async () => {\n    const Token = localStorage.getItem(\"Token\");\n    try{\n    const res = await axios.delete(\n      `https://blog-backend-ysf.herokuapp.com/${slug}/update`,\n      {\n        headers: {\n          Authorization: `Token ${Token}`,\n        },\n      }\n    );\n    history.push(\"/\");\n  }catch(err){\n    console.log(err)\n  }\n  };\n\n  const body = (\n    <div\n      style={modalStyle}\n      className={matches ? classes.paper : classes.paper1}\n    >\n      <h2 id=\"simple-modal-title\">Text in a modal</h2>\n      <p id=\"simple-modal-description\">Are you sure to delete this post ?</p>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={handleCloseModal}\n        className={matches ? classes.modalText : classes.modalText1}\n      >\n        Cancel\n      </Button>\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        onClick={() => onDelete()}\n        className={matches ? classes.modalText : classes.modalText1}\n      >\n        Delete\n      </Button>\n    </div>\n  );\n\n  return (\n    <div className={matches ? classes.container : classes.container1}>\n      <Button\n        aria-controls=\"customized-menu\"\n        aria-haspopup=\"true\"\n        variant=\"contained\"\n        color=\"secondary\"\n        onClick={handleClick}\n        className={matches ? classes.menuText : classes.menuText1}\n      >\n        Menu\n      </Button>\n      <StyledMenu\n        id=\"customized-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <Link href={`/${slug}/update`}>\n          <StyledMenuItem>\n            <ListItemIcon>\n              <EditIcon fontSize=\"small\" />\n            </ListItemIcon>\n            <ListItemText primary=\"EDIT\" />\n          </StyledMenuItem>\n        </Link>\n        <Button onClick={handleOpenModal}>\n          <StyledMenuItem>\n            <ListItemIcon>\n              <DeleteIcon fontSize=\"small\" />\n            </ListItemIcon>\n            <ListItemText primary=\"Delete\" />\n          </StyledMenuItem>\n        </Button>\n\n        <Modal\n          open={open}\n          onClose={handleCloseModal}\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n        >\n          {body}\n        </Modal>\n      </StyledMenu>\n    </div>\n  );\n}\n","/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/components/PaginationButtons.js",[],"/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/components/SliderComponent.js",[],"/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/components/SliderText.js",[],"/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/components/Footer.js",[],{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":24,"column":5,"nodeType":"132","messageId":"133","endLine":24,"endColumn":15},{"ruleId":"126","replacedBy":"134"},{"ruleId":"128","replacedBy":"135"},{"ruleId":"136","severity":1,"message":"137","line":26,"column":6,"nodeType":"138","endLine":26,"endColumn":12,"suggestions":"139"},{"ruleId":"140","severity":1,"message":"141","line":7,"column":10,"nodeType":"142","messageId":"143","endLine":7,"endColumn":25},{"ruleId":"136","severity":1,"message":"144","line":65,"column":6,"nodeType":"138","endLine":65,"endColumn":8,"suggestions":"145"},{"ruleId":"140","severity":1,"message":"146","line":10,"column":8,"nodeType":"142","messageId":"143","endLine":10,"endColumn":11},{"ruleId":"140","severity":1,"message":"147","line":17,"column":17,"nodeType":"142","messageId":"143","endLine":17,"endColumn":31},{"ruleId":"148","severity":1,"message":"149","line":118,"column":10,"nodeType":"150","endLine":120,"endColumn":11},{"ruleId":"140","severity":1,"message":"151","line":12,"column":8,"nodeType":"142","messageId":"143","endLine":12,"endColumn":16},{"ruleId":"136","severity":1,"message":"152","line":155,"column":6,"nodeType":"138","endLine":155,"endColumn":8,"suggestions":"153"},{"ruleId":"140","severity":1,"message":"151","line":15,"column":8,"nodeType":"142","messageId":"143","endLine":15,"endColumn":16},{"ruleId":"140","severity":1,"message":"151","line":15,"column":8,"nodeType":"142","messageId":"143","endLine":15,"endColumn":16},{"ruleId":"136","severity":1,"message":"152","line":143,"column":6,"nodeType":"138","endLine":143,"endColumn":8,"suggestions":"154"},{"ruleId":"140","severity":1,"message":"155","line":162,"column":11,"nodeType":"142","messageId":"143","endLine":162,"endColumn":19},{"ruleId":"126","replacedBy":"156"},{"ruleId":"128","replacedBy":"157"},{"ruleId":"140","severity":1,"message":"158","line":1,"column":25,"nodeType":"142","messageId":"143","endLine":1,"endColumn":31},{"ruleId":"140","severity":1,"message":"159","line":142,"column":11,"nodeType":"142","messageId":"143","endLine":142,"endColumn":14},"no-native-reassign",["160"],"no-negated-in-lhs",["161"],"no-dupe-keys","Duplicate key 'marginLeft'.","ObjectExpression","unexpected",["160"],["161"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchDataList'. Either include it or remove the dependency array.","ArrayExpression",["162"],"no-unused-vars","'fetchDataDetail' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'slug'. Either include it or remove the dependency array.",["163"],"'Box' is defined but never used.","'ToastContainer' is defined but never used.","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","'CKEditor' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["164"],["165"],"'response' is assigned a value but never used.",["160"],["161"],"'useRef' is defined but never used.","'res' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"166","fix":"167"},{"desc":"168","fix":"169"},{"desc":"170","fix":"171"},{"desc":"170","fix":"172"},"Update the dependencies array to be: [fetchDataList, page]",{"range":"173","text":"174"},"Update the dependencies array to be: [slug]",{"range":"175","text":"176"},"Update the dependencies array to be: [fetchData]",{"range":"177","text":"178"},{"range":"179","text":"178"},[822,828],"[fetchDataList, page]",[1631,1633],"[slug]",[3893,3895],"[fetchData]",[3434,3436]]
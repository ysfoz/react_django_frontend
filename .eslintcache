[{"/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/App.js":"1","/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/components/navbar.js":"2","/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/reportWebVitals.js":"3","/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/index.js":"4","/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/components/Navbar.js":"5","/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/components/BlogCard.js":"6","/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/pages/HomePage.js":"7","/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/pages/DetailPage.js":"8","/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/components/CardDetail.js":"9","/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/router/Router.js":"10","/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/pages/Register.js":"11","/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/pages/Login.js":"12","/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/pages/ProfilePage.js":"13","/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/components/CardList.js":"14","/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/pages/PostPage.js":"15","/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/pages/UpdatePage.js":"16","/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/services/PostData.js":"17","/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/context/AuthContext.js":"18","/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/helper/FetchData.js":"19","/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/components/MenuComponent.js":"20","/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/components/PaginationButtons.js":"21","/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/components/SliderComponent.js":"22","/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/components/SliderText.js":"23","/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/components/Footer.js":"24"},{"size":227,"mtime":1611840870651,"results":"25","hashOfConfig":"26"},{"size":4391,"mtime":1611575212229,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":1611502682168,"results":"28","hashOfConfig":"26"},{"size":500,"mtime":1611841022913,"results":"29","hashOfConfig":"26"},{"size":6230,"mtime":1612194659774,"results":"30","hashOfConfig":"26"},{"size":4448,"mtime":1612221579467,"results":"31","hashOfConfig":"26"},{"size":1195,"mtime":1612215417597,"results":"32","hashOfConfig":"26"},{"size":1302,"mtime":1612132829286,"results":"33","hashOfConfig":"26"},{"size":7055,"mtime":1612117973288,"results":"34","hashOfConfig":"26"},{"size":1784,"mtime":1612214435016,"results":"35","hashOfConfig":"26"},{"size":6325,"mtime":1611998243311,"results":"36","hashOfConfig":"26"},{"size":5742,"mtime":1612125062487,"results":"37","hashOfConfig":"26"},{"size":8596,"mtime":1611998308000,"results":"38","hashOfConfig":"26"},{"size":827,"mtime":1612116513966,"results":"39","hashOfConfig":"26"},{"size":7861,"mtime":1612116854489,"results":"40","hashOfConfig":"26"},{"size":8592,"mtime":1612116922005,"results":"41","hashOfConfig":"26"},{"size":364,"mtime":1611786962239,"results":"42","hashOfConfig":"26"},{"size":1197,"mtime":1612126414419,"results":"43","hashOfConfig":"26"},{"size":1851,"mtime":1612040575942,"results":"44","hashOfConfig":"26"},{"size":5470,"mtime":1612116540433,"results":"45","hashOfConfig":"26"},{"size":1367,"mtime":1612218359877,"results":"46","hashOfConfig":"26"},{"size":1480,"mtime":1612205340185,"results":"47","hashOfConfig":"26"},{"size":1735,"mtime":1612219384519,"results":"48","hashOfConfig":"26"},{"size":1266,"mtime":1612218306586,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"indfn7",{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"70"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/App.js",[],["105","106"],"/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/components/navbar.js",["107"],"/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/reportWebVitals.js",[],"/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/index.js",[],"/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/components/Navbar.js",["108","109","110"],"/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/components/BlogCard.js",["111"],"/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/pages/HomePage.js",["112"],"/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/pages/DetailPage.js",[],"/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/components/CardDetail.js",["113"],"import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { red } from \"@material-ui/core/colors\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport ChatBubbleOutlineIcon from \"@material-ui/icons/ChatBubbleOutline\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Badge from \"@material-ui/core/Badge\";\nimport moment from \"moment\";\nimport { postDataWithToken, postDatalike } from \"../helper/FetchData\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport { useHistory } from \"react-router-dom\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minHeight: \"100%\",\n    marginTop: 50,\n    paddingRight: 150,\n    paddingLeft: 150,\n  },\n\n  button: {\n    margin: theme.spacing(1),\n    height: 55,\n  },\n\n  commentForm: {\n    display: \"flex\",\n    alignItems: \"flex-end\",\n    marginBottom: 35,\n  },\n  root2: {\n    maxWidth: 350,\n    marginTop: 50,\n\n    paddingLeft: 20,\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\", // 16:9\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\",\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n  privateButton: {\n    marginLeft: \"20%\",\n  },\n}));\n\nexport default function CardDetail({ post, fetchData }) {\n  const [isLiked, setLiked] = useState(false);\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n\n  const history = useHistory();\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  const matches = useMediaQuery(\"(min-width:750px)\");\n\n  const validationSchema = Yup.object().shape({\n    content: Yup.string()\n      .max(100, \"this comment ist too long\")\n      .min(1, \"You must write something\"),\n  });\n\n  const initialValues = {\n    content: \"\",\n  };\n\n  const onSubmit = (values) => {\n    postDataWithToken(\n      `https://blog-backend-ysf.herokuapp.com/${post.slug}/comment/`,\n      values\n    )\n      .then((data) => {\n        fetchData();\n        history.push(`/${post.slug}/detail/`);\n        formik.values.content = \"\";\n      })\n      .catch((err) => {\n        toast.error(err.message || \" an error occured\");\n      });\n  };\n\n  const formik = useFormik({\n    initialValues,\n    validationSchema,\n    onSubmit,\n  });\n\n  const like = () => {\n    console.log(post.slug);\n    postDatalike(`https://blog-backend-ysf.herokuapp.com/${post.slug}/like/`)\n      .then((data) => {\n        fetchData();\n        history.push(`/${post.slug}/detail/`);\n        if (data == 201) {\n          setLiked(true);\n        } else {\n          setLiked(false);\n        }\n      })\n      .catch((err) => {\n        toast.error(err.message || \" an error occured\");\n      });\n  };\n\n  return (\n    <Card className={matches ? classes.root : classes.root2}>\n      <CardHeader\n        avatar={\n          <Avatar aria-label=\"recipe\" className={classes.avatar}>\n            {post?.author[0]}\n          </Avatar>\n        }\n        title={post?.title}\n        subheader={moment(post?.publish_date).startOf(\"hour\").fromNow()}\n      />\n      <Typography style={{ fontSize: 18, margin: 20, color: \"crimson\" }}>\n        <i>created by {post?.author}</i>{\" \"}\n      </Typography>\n      <CardMedia\n        className={classes.media}\n        image={post?.image}\n        title=\"Card Image\"\n      />\n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {post?.content}\n        </Typography>\n      </CardContent>\n      <CardActions disableSpacing>\n        <IconButton aria-label=\"add to favorites\">\n          <Badge badgeContent={post?.like_count} color=\"secondary\">\n            <FavoriteIcon\n              color={isLiked ? \"secondary\" : \"default\"}\n              onClick={like}\n            \n            />\n          </Badge>\n        </IconButton>\n        <IconButton aria-label=\"Visibility\">\n          <Badge badgeContent={post?.view_count} color=\"secondary\" >\n            <VisibilityIcon />\n          </Badge>\n        </IconButton>\n        <IconButton aria-label=\"ChatBubbleOutline\">\n          <Badge badgeContent={post?.comment_count} color=\"secondary\">\n            <ChatBubbleOutlineIcon />\n          </Badge>\n        </IconButton>\n\n        <IconButton\n          className={clsx(classes.expand, {\n            [classes.expandOpen]: expanded,\n          })}\n          onClick={handleExpandClick}\n          aria-expanded={expanded}\n          aria-label=\"show more\"\n        >\n          <ExpandMoreIcon />\n        </IconButton>\n        <Typography style={{ color: \"#187965\" }}>See Comments</Typography>\n      </CardActions>\n\n      <form className={classes.commentForm} onSubmit={formik.handleSubmit}>\n        <TextField\n          name=\"content\"\n          id=\"filled-full-width\"\n          style={{ display: \"inline-block\", float: \"right\" }}\n          label=\"Comments\"\n          placeholder=\"leave your Comment\"\n          fullWidth\n          margin=\"normal\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          variant=\"filled\"\n          onChange={formik.content}\n          value={formik.values.content}\n          onBlur={formik.handleBlur}\n          {...formik.getFieldProps(\"content\")}\n          error={formik.touched.content && formik.errors.content}\n          helperText={formik.touched.content && formik.errors.content}\n        />\n\n        <Button\n          type=\"submit\"\n          style={{ fontWeight: \"bold\" }}\n          variant=\"contained\"\n          color=\"secondary\"\n          className={classes.button}\n          endIcon={<SendIcon>send</SendIcon>}\n        >\n          Send\n        </Button>\n        <ToastContainer />\n      </form>\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n        <CardContent>\n          {post?.comments.map((comment, index) => {\n            return (\n              <Typography key={index} paragraph>\n                <b>{comment.content}</b> comment by <i>{comment.user}</i> at{\" \"}\n                {moment(comment.time).startOf(\"hour\").fromNow()}\n              </Typography>\n            );\n          })}\n        </CardContent>\n      </Collapse>\n    </Card>\n  );\n}\n",["114","115"],"/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/router/Router.js",[],"/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/pages/Register.js",[],"/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/pages/Login.js",["116"],"import React, { useContext, useState, useEffect } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport { useHistory } from \"react-router-dom\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\n\n// FOOTER\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright ©️ \"}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\n// STYLE\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\n// FUNCTION\n\nexport default function SignIn() {\n  let history = useHistory();\n  const classes = useStyles();\n  const { setCurrentUser, fetchDataLogin, currentUser } = useContext(AuthContext);\n  const [isLogged, setLogged] = useState(false);\n\n  const validationSchema = Yup.object().shape({\n    username: Yup.string()\n      .required(\"You must enter an username\")\n      .max(100, \"not invalid username\"),\n    password: Yup.string()\n      .required(\"No password provided.\")\n      .min(8, \"Password is too short - should be 8 chars minimum.\"),\n  });\n\n  const initialValues = {\n    username: \"\",\n    password: \"\",\n  };\n\n  const onSubmit = (values) => {\n    const user = values.username;\n    fetchDataLogin(\"https://blog-backend-ysf.herokuapp.com/auth/login/\", values)\n      .then((data) => {\n        localStorage.setItem(\"currentUser\", values.username);\n        localStorage.setItem(\"isLoggedIn\", true);\n        localStorage.setItem(\"Token\", data.key);\n        setLogged(true);\n\n        if (isLogged) {\n          setCurrentUser(user);\n        }\n\n        history.push(\"/\");\n      })\n      .catch((err) => {\n        toast.error(\"Please check your username and password\");\n      });\n  };\n\n  const formik = useFormik({\n    initialValues,\n    validationSchema,\n    onSubmit,\n  });\n\n  useEffect(() => {}, [currentUser, isLogged]);\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <ToastContainer\n          position=\"top-right\"\n          autoClose={2000}\n          hideProgressBar={false}\n          newestOnTop={false}\n          closeOnClick\n          rtl={false}\n          pauseOnFocusLoss\n          pauseOnHover\n        />\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form\n          className={classes.form}\n          noValidate\n          onSubmit={formik.handleSubmit}\n        >\n          // TODO: toast ile hata verdirilecek\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"username\"\n            label=\"Username\"\n            name=\"username\"\n            autoComplete=\"username\"\n            autoFocus\n            onChange={formik.handeChange}\n            value={formik.values.username}\n            onBlur={formik.handleBlur}\n            {...formik.getFieldProps(\"username\")}\n            error={formik.touched.username && formik.errors.username}\n            helperText={formik.touched.username && formik.errors.username}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            onChange={formik.handleChange}\n            value={formik.values.password}\n            onBlur={formik.handleBlur}\n            {...formik.getFieldProps(\"password\")}\n            error={formik.touched.password && formik.errors.password}\n            helperText={formik.touched.password && formik.errors.password}\n          />\n          <FormControlLabel\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Remember me\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign In\n          </Button>\n        </form>\n        <Grid container>\n          <Grid item xs>\n            <Link href=\"#\" variant=\"body2\">\n              Forgot password?\n            </Link>\n          </Grid>\n          <Grid item>\n            <Link href=\"#\" variant=\"body2\">\n              {\"Don't have an account? Sign Up\"}\n            </Link>\n          </Grid>\n        </Grid>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n","/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/pages/ProfilePage.js",["117","118"],"/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/components/CardList.js",[],"/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/pages/PostPage.js",["119"],"import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport LocalMallIcon from \"@material-ui/icons/LocalMall\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport CKEditor from \"ckeditor4-react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useHistory } from \"react-router-dom\";\nimport { postDataWithToken } from \"../helper/FetchData\";\n\n// STYLE\n\nconst CssTextField = withStyles({\n  root: {\n    width: \"40%\",\n    \"& label.Mui-focused\": {\n      color: \"green\",\n    },\n    \"& .MuiInput-underline:after\": {\n      borderBottomColor: \"green\",\n    },\n    \"& .MuiOutlinedInput-root\": {\n      \"& fieldset\": {\n        borderColor: \"#cfccdf\",\n      },\n      \"&:hover fieldset\": {\n        borderColor: \"#e9967a\",\n      },\n      \"&.Mui-focused fieldset\": {\n        borderColor: \"green\",\n      },\n    },\n  },\n})(TextField);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    overflow: \"hidden\",\n  },\n\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.primary.main,\n  },\n  form: {\n    marginTop: \"3rem\",\n    alignItems: \"center\",\n    width: \"80%\",\n    paddingLeft: \"10%\",\n  },\n  form2: {\n    marginTop: \"3rem\",\n    alignItems: \"center\",\n    width: \"100%\",\n  },\n  margin: {\n    margin: 2,\n    marginTop: 13,\n  },\n  address: {\n    marginTop: 13,\n    margin: 2,\n    width: \"80.5%\",\n  },\n  bio: {\n    margin: 2,\n    marginTop: 13,\n  },\n  button: {\n    marginTop: 13,\n    width: \"80.7%\",\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 500,\n    display: \"block\",\n    marginLeft: -0.1,\n    width: \"40%\",\n    \"& label.Mui-focused\": {\n      color: \"green\",\n    },\n    \"& .MuiInput-underline:after\": {\n      borderBottomColor: \"green\",\n    },\n    \"& .MuiOutlinedInput-root\": {\n      \"& fieldset\": {\n        borderColor: \"#cfccdf\",\n      },\n      \"&:hover fieldset\": {\n        borderColor: \"#e9967a\",\n      },\n      \"&.Mui-focused fieldset\": {\n        borderColor: \"green\",\n      },\n    },\n  },\n}));\n\n//FUNCTION\n\nconst PostPage = () => {\n  const classes = useStyles();\n  const matches = useMediaQuery(\"(min-width:750px)\");\n\n  const history = useHistory();\n\n  const validationSchema = Yup.object().shape({\n    title: Yup.string()\n      .required(\"you must write a title\")\n      .max(100, \"Title is too long\"),\n    content: Yup.string().required(\"You must write something\"),\n    image: Yup.string(),\n    status: Yup.string(),\n  });\n\n  const initialValues = {\n    title: \"\",\n    content: \"\",\n    image: \"\",\n    status: \"\",\n  };\n\n  const onSubmit = (values) => {\n    postDataWithToken(\"https://blog-backend-ysf.herokuapp.com/create/\", values)\n      .then((data) => {\n        history.push(\"/\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const formik = useFormik({\n    initialValues,\n    validationSchema,\n    onSubmit,\n  });\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <Grid item xs={12} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LocalMallIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Create New Post\n          </Typography>\n          <form\n            className={matches ? classes.form : classes.form2}\n            onSubmit={formik.handleSubmit}\n          >\n            <CssTextField\n              className={classes.margin}\n              style={{ width: matches ? \"80.5%\" : \"100%\" }}\n              variant=\"outlined\"\n              id=\"title\"\n              name=\"title\"\n              label=\"Title\"\n              onChange={formik.handleChange}\n              value={formik.values.title}\n              onBlur={formik.handleBlur}\n              {...formik.getFieldProps(\"title\")}\n              error={formik.touched.title && formik.errors.title}\n              helperText={formik.touched.title && formik.errors.title}\n            />\n            <CssTextField\n              className={classes.margin}\n              style={{ width: matches ? \"80.5%\" : \"100%\" }}\n              id=\"image\"\n              name=\"image\"\n              label=\"Image URL\"\n              variant=\"outlined\"\n              onChange={formik.handleChange}\n              value={formik.values.image}\n              onBlur={formik.handleBlur}\n              {...formik.getFieldProps(\"image\")}\n              error={formik.touched.image && formik.errors.image}\n              helperText={formik.touched.image && formik.errors.image}\n            />\n            {/* {\n                matches\n                ?\n                <div className=\"App\" style={{  marginTop:20,width: matches ? \"80.5%\" : \"100%\" }}>\n            \n                <CKEditor\n                    id=\"content\"\n                    name = 'content'\n                    editor={ ClassicEditor }\n                    onChange={(event) => formik.handleChange(event)}\n                    value = {formik.values.content}\n                    onBlur={(event) => formik.handleBlur(event)}\n                    {...formik.getFieldProps('content')}\n                    error={formik.touched.content && formik.errors.content }\n                   type=\"classic\"\n                  //  data =  {formik.values.content}\n                   readOnly={false}\n                />\n            </div>\n                : */}\n            <CssTextField\n              className={classes.margin}\n              style={{ width: matches ? \"80.5%\" : \"100%\" }}\n              variant=\"outlined\"\n              multiline\n              rows={8}\n              id=\"content\"\n              name=\"content\"\n              label=\"Content\"\n              onChange={formik.handleChange}\n              value={formik.values.content}\n              onBlur={formik.handleBlur}\n              {...formik.getFieldProps(\"content\")}\n              error={formik.touched.content && formik.errors.content}\n              helperText={formik.touched.content && formik.errors.content}\n            />\n\n            <FormControl variant=\"outlined\" className={classes.formControl}>\n              <InputLabel htmlFor=\"outlined-age-native-simple\">\n                Status\n              </InputLabel>\n              <Select\n                native\n                value={formik.values.status}\n                onChange={formik.handleChange}\n                label=\"Status\"\n                name=\"status\"\n                inputProps={{\n                  name: \"status\",\n                  id: \"outlined-age-native-simple\",\n                }}\n              >\n                <option aria-label=\"None\" value=\"\" />\n                <option value={\"d\"} label=\"draft\" />\n                <option value={\"p\"} label=\"published\" />\n              </Select>\n            </FormControl>\n            <Button\n              color=\"primary\"\n              style={{\n                width: matches ? \"80.7%\" : \"100%\",\n                marginTop: matches ? null : 30,\n              }}\n              variant=\"contained\"\n              fullWidth\n              type=\"submit\"\n              className={classes.button}\n            >\n              Create\n            </Button>\n          </form>\n        </div>\n      </Grid>\n    </Grid>\n  );\n};\nexport default PostPage;\n","/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/pages/UpdatePage.js",["120","121","122"],"import React, { useEffect, useState } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport LocalMallIcon from \"@material-ui/icons/LocalMall\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport CKEditor from \"ckeditor4-react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useHistory } from \"react-router-dom\";\nimport { putDataWithToken } from \"../helper/FetchData\";\nimport { toast } from \"react-toastify\";\nimport axios from \"axios\";\nimport { useParams } from \"react-router-dom\";\n\n//STYLE\n\nconst CssTextField = withStyles({\n  root: {\n    width: \"40%\",\n    \"& label.Mui-focused\": {\n      color: \"green\",\n    },\n    \"& .MuiInput-underline:after\": {\n      borderBottomColor: \"green\",\n    },\n    \"& .MuiOutlinedInput-root\": {\n      \"& fieldset\": {\n        borderColor: \"#cfccdf\",\n      },\n      \"&:hover fieldset\": {\n        borderColor: \"#e9967a\",\n      },\n      \"&.Mui-focused fieldset\": {\n        borderColor: \"green\",\n      },\n    },\n  },\n})(TextField);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    overflow: \"hidden\",\n  },\n\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.primary.main,\n  },\n  form: {\n    marginTop: \"3rem\",\n    alignItems: \"center\",\n    width: \"80%\",\n    paddingLeft: \"10%\",\n  },\n  form2: {\n    marginTop: \"3rem\",\n    alignItems: \"center\",\n    width: \"100%\",\n  },\n  margin: {\n    margin: 2,\n    marginTop: 13,\n  },\n  address: {\n    marginTop: 13,\n    margin: 2,\n    width: \"80.5%\",\n  },\n  bio: {\n    margin: 2,\n    marginTop: 13,\n  },\n  button: {\n    marginTop: 13,\n    width: \"80.7%\",\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 500,\n    display: \"block\",\n    marginLeft: -0.1,\n    width: \"40%\",\n    \"& label.Mui-focused\": {\n      color: \"green\",\n    },\n    \"& .MuiInput-underline:after\": {\n      borderBottomColor: \"green\",\n    },\n    \"& .MuiOutlinedInput-root\": {\n      \"& fieldset\": {\n        borderColor: \"#cfccdf\",\n      },\n      \"&:hover fieldset\": {\n        borderColor: \"#e9967a\",\n      },\n      \"&.Mui-focused fieldset\": {\n        borderColor: \"green\",\n      },\n    },\n  },\n}));\n\n//FUNCTION\n\nconst UpdatePage = () => {\n  const [data, setData] = useState();\n  const classes = useStyles();\n  const matches = useMediaQuery(\"(min-width:750px)\");\n\n  const history = useHistory();\n  const { slug } = useParams();\n\n  const fetchData = async () => {\n    const res = await axios.get(\n      `https://blog-backend-ysf.herokuapp.com/${slug}/detail`\n    );\n    formik.values.title = res?.data?.title;\n    formik.values.image = res?.data?.image;\n    formik.values.content = res?.data?.content;\n    formik.values.status = res?.data?.status;\n    setData(res?.data);\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const validationSchema = Yup.object().shape({\n    title: Yup.string()\n      .required(\"you must write a title\")\n      .max(100, \"Title is too long\"),\n    content: Yup.string().required(\"You must write something\"),\n    image: Yup.string(),\n    status: Yup.string(),\n  });\n\n  const initialValues = {\n    title: \"\",\n    content: \"\",\n    image: \"\",\n    status: \"\",\n  };\n\n  const onSubmit = (values) => {\n    const response = putDataWithToken(\n      `https://blog-backend-ysf.herokuapp.com/${slug}/update/`,\n      values\n    )\n      .then((data) => {\n        history.push(`/${slug}/detail/`);\n      })\n      .catch((err) => {\n        toast.error(err.message || \" an error occured\");\n      });\n  };\n\n  const formik = useFormik({\n    initialValues,\n    validationSchema,\n    onSubmit,\n  });\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <Grid item xs={12} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LocalMallIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Update Post\n          </Typography>\n          <form\n            className={matches ? classes.form : classes.form2}\n            onSubmit={formik.handleSubmit}\n          >\n            <CssTextField\n              defaultValue={data?.title}\n              className={classes.margin}\n              style={{ width: matches ? \"80.5%\" : \"100%\" }}\n              variant=\"outlined\"\n              id=\"title\"\n              name=\"title\"\n              label=\"Title\"\n              onChange={formik.handleChange}\n              value={formik.values.title}\n              onBlur={formik.handleBlur}\n              {...formik.getFieldProps(\"title\")}\n              error={formik.touched.title && formik.errors.title}\n              helperText={formik.touched.title && formik.errors.title}\n            />\n            <CssTextField\n              className={classes.margin}\n              style={{ width: matches ? \"80.5%\" : \"100%\" }}\n              id=\"image\"\n              name=\"image\"\n              label=\"Image URL\"\n              variant=\"outlined\"\n              onChange={formik.handleChange}\n              value={formik.values.image}\n              onBlur={formik.handleBlur}\n              {...formik.getFieldProps(\"image\")}\n              error={formik.touched.image && formik.errors.image}\n              helperText={formik.touched.image && formik.errors.image}\n            />\n            {/* {\n                matches\n                ?\n                <div className=\"App\" style={{  marginTop:20,width: matches ? \"80.5%\" : \"100%\" }}>\n            \n                <CKEditor\n                    id=\"content\"\n                    name = 'content'\n                    editor={ ClassicEditor }\n                    onChange={(event) => formik.handleChange(event)}\n                    value = {formik.values.content}\n                    onBlur={(event) => formik.handleBlur(event)}\n                    {...formik.getFieldProps('content')}\n                    error={formik.touched.content && formik.errors.content }\n                   type=\"classic\"\n                  //  data =  {formik.values.content}\n                   readOnly={false}\n                />\n            </div>\n                : */}\n            <CssTextField\n              className={classes.margin}\n              style={{ width: matches ? \"80.5%\" : \"100%\" }}\n              variant=\"outlined\"\n              multiline\n              rows={8}\n              id=\"content\"\n              name=\"content\"\n              label=\"Content\"\n              onChange={formik.handleChange}\n              value={formik.values.content}\n              onBlur={formik.handleBlur}\n              {...formik.getFieldProps(\"content\")}\n              error={formik.touched.content && formik.errors.content}\n              helperText={formik.touched.content && formik.errors.content}\n            />\n\n            <FormControl variant=\"outlined\" className={classes.formControl}>\n              <InputLabel htmlFor=\"outlined-age-native-simple\">\n                Status\n              </InputLabel>\n              <Select\n                native\n                value={formik.values.status}\n                onChange={formik.handleChange}\n                label=\"Status\"\n                name=\"status\"\n                inputProps={{\n                  name: \"status\",\n                  id: \"outlined-age-native-simple\",\n                }}\n              >\n                <option aria-label=\"None\" value=\"\" />\n                <option value={\"d\"} label=\"draft\" />\n                <option value={\"p\"} label=\"published\" />\n              </Select>\n            </FormControl>\n            <Button\n              color=\"primary\"\n              style={{\n                width: matches ? \"80.7%\" : \"100%\",\n                marginTop: matches ? null : 30,\n              }}\n              variant=\"contained\"\n              fullWidth\n              type=\"submit\"\n              className={classes.button}\n            >\n              Update\n            </Button>\n          </form>\n        </div>\n      </Grid>\n    </Grid>\n  );\n};\nexport default UpdatePage;\n","/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/services/PostData.js",[],"/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/context/AuthContext.js",[],"/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/helper/FetchData.js",[],"/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/components/MenuComponent.js",[],"/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/components/PaginationButtons.js",["123","124","125"],"import React, { useContext, useEffect } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { AuthContext } from \"../context/AuthContext\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop:15,\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n}));\n\nexport default function GroupSizesColors(props) {\n  const { pageCount } = useContext(AuthContext);\n  const classes = useStyles();\n  const pageListFunc = () => {\n    let pageList = [];\n    for (let i = 1; i <= pageCount; i++) {\n      pageList.push(i);\n    }\n    return pageList;\n  };\n\n  useEffect(() => {\n    pageListFunc();\n  }, []);\n  return (\n    <div className={classes.root}>\n      <ButtonGroup  variant=\"contained\" color=\"primary\" aria-label=\"contained primary button group\">\n        {pageListFunc().map((value, index) => (\n          <Button\n           style={{borderRadius:'20px'}}\n            key={index}\n            value={value}\n            onClick={() => props.setPage(value)}\n            color={value == props?.page ? 'secondary' : null}\n            style={{marginLeft:1}}\n          >\n            {value}\n          </Button>\n        ))}\n      </ButtonGroup>\n    </div>\n  );\n}\n","/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/components/SliderComponent.js",[],"/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/components/SliderText.js",[],"/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/components/Footer.js",[],{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":24,"column":5,"nodeType":"132","messageId":"133","endLine":24,"endColumn":15},{"ruleId":"130","severity":1,"message":"131","line":33,"column":5,"nodeType":"132","messageId":"133","endLine":33,"endColumn":15},{"ruleId":"134","severity":1,"message":"135","line":93,"column":11,"nodeType":"136","messageId":"137","endLine":93,"endColumn":22},{"ruleId":"134","severity":1,"message":"138","line":94,"column":10,"nodeType":"136","messageId":"137","endLine":94,"endColumn":15},{"ruleId":"134","severity":1,"message":"139","line":12,"column":10,"nodeType":"136","messageId":"137","endLine":12,"endColumn":13},{"ruleId":"140","severity":1,"message":"141","line":26,"column":6,"nodeType":"142","endLine":26,"endColumn":12,"suggestions":"143"},{"ruleId":"144","severity":1,"message":"145","line":126,"column":18,"nodeType":"146","messageId":"133","endLine":126,"endColumn":20},{"ruleId":"126","replacedBy":"147"},{"ruleId":"128","replacedBy":"148"},{"ruleId":"149","severity":1,"message":"150","line":130,"column":10,"nodeType":"151","endLine":132,"endColumn":11},{"ruleId":"134","severity":1,"message":"152","line":12,"column":8,"nodeType":"136","messageId":"137","endLine":12,"endColumn":16},{"ruleId":"140","severity":1,"message":"153","line":155,"column":6,"nodeType":"142","endLine":155,"endColumn":8,"suggestions":"154"},{"ruleId":"134","severity":1,"message":"152","line":15,"column":8,"nodeType":"136","messageId":"137","endLine":15,"endColumn":16},{"ruleId":"134","severity":1,"message":"152","line":15,"column":8,"nodeType":"136","messageId":"137","endLine":15,"endColumn":16},{"ruleId":"140","severity":1,"message":"153","line":143,"column":6,"nodeType":"142","endLine":143,"endColumn":8,"suggestions":"155"},{"ruleId":"134","severity":1,"message":"156","line":162,"column":11,"nodeType":"136","messageId":"137","endLine":162,"endColumn":19},{"ruleId":"140","severity":1,"message":"157","line":32,"column":6,"nodeType":"142","endLine":32,"endColumn":8,"suggestions":"158"},{"ruleId":"144","severity":1,"message":"145","line":42,"column":26,"nodeType":"146","messageId":"133","endLine":42,"endColumn":28},{"ruleId":"159","severity":1,"message":"160","line":43,"column":13,"nodeType":"161","endLine":43,"endColumn":35},"no-native-reassign",["162"],"no-negated-in-lhs",["163"],"no-dupe-keys","Duplicate key 'marginLeft'.","ObjectExpression","unexpected","no-unused-vars","'currentUser' is assigned a value but never used.","Identifier","unusedVar","'login' is assigned a value but never used.","'red' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchDataList'. Either include it or remove the dependency array.","ArrayExpression",["164"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression",["162"],["163"],"react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","'CKEditor' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["165"],["166"],"'response' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'pageListFunc'. Either include it or remove the dependency array.",["167"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"168","fix":"169"},{"desc":"170","fix":"171"},{"desc":"170","fix":"172"},{"desc":"173","fix":"174"},"Update the dependencies array to be: [fetchDataList, page]",{"range":"175","text":"176"},"Update the dependencies array to be: [fetchData]",{"range":"177","text":"178"},{"range":"179","text":"178"},"Update the dependencies array to be: [pageListFunc]",{"range":"180","text":"181"},[825,831],"[fetchDataList, page]",[3893,3895],"[fetchData]",[3434,3436],[809,811],"[pageListFunc]"]
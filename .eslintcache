[{"/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/App.js":"1","/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/components/navbar.js":"2","/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/reportWebVitals.js":"3","/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/index.js":"4","/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/components/Navbar.js":"5","/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/components/BlogCard.js":"6","/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/pages/HomePage.js":"7","/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/pages/DetailPage.js":"8","/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/components/CardDetail.js":"9","/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/router/Router.js":"10","/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/pages/Register.js":"11","/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/pages/Login.js":"12","/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/pages/ProfilePage.js":"13","/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/components/CardList.js":"14","/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/pages/PostPage.js":"15","/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/pages/UpdatePage.js":"16","/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/services/PostData.js":"17","/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/context/AuthContext.js":"18","/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/helper/FetchData.js":"19","/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/components/MenuComponent.js":"20","/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/components/PaginationButtons.js":"21","/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/components/SliderComponent.js":"22","/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/components/SliderText.js":"23","/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/components/Footer.js":"24","/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/components/HomeButton.js":"25"},{"size":227,"mtime":1611840870651,"results":"26","hashOfConfig":"27"},{"size":4391,"mtime":1611575212229,"results":"28","hashOfConfig":"27"},{"size":362,"mtime":1611502682168,"results":"29","hashOfConfig":"27"},{"size":507,"mtime":1612297436071,"results":"30","hashOfConfig":"27"},{"size":6215,"mtime":1612472370013,"results":"31","hashOfConfig":"27"},{"size":4410,"mtime":1612471886521,"results":"32","hashOfConfig":"27"},{"size":1197,"mtime":1612480509032,"results":"33","hashOfConfig":"27"},{"size":1998,"mtime":1613218039321,"results":"34","hashOfConfig":"27"},{"size":7234,"mtime":1613216945972,"results":"35","hashOfConfig":"27"},{"size":1764,"mtime":1612480554985,"results":"36","hashOfConfig":"27"},{"size":6332,"mtime":1612289409918,"results":"37","hashOfConfig":"27"},{"size":5426,"mtime":1612453264063,"results":"38","hashOfConfig":"27"},{"size":8596,"mtime":1611998308625,"results":"39","hashOfConfig":"27"},{"size":834,"mtime":1612471335645,"results":"40","hashOfConfig":"27"},{"size":7861,"mtime":1612116854489,"results":"41","hashOfConfig":"27"},{"size":8592,"mtime":1612116922005,"results":"42","hashOfConfig":"27"},{"size":364,"mtime":1611786962239,"results":"43","hashOfConfig":"27"},{"size":1197,"mtime":1612126414419,"results":"44","hashOfConfig":"27"},{"size":1851,"mtime":1612040575942,"results":"45","hashOfConfig":"27"},{"size":5363,"mtime":1613222597820,"results":"46","hashOfConfig":"27"},{"size":1480,"mtime":1612471761422,"results":"47","hashOfConfig":"27"},{"size":1480,"mtime":1612205340185,"results":"48","hashOfConfig":"27"},{"size":1908,"mtime":1612477362604,"results":"49","hashOfConfig":"27"},{"size":1281,"mtime":1612453176759,"results":"50","hashOfConfig":"27"},{"size":821,"mtime":1612478630030,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"indfn7",{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"59"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"62"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/App.js",[],["110","111"],"/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/components/navbar.js",["112"],"/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/reportWebVitals.js",[],["113","114"],"/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/index.js",[],["115","116"],"/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/components/Navbar.js",["117"],"/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/components/BlogCard.js",[],"/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/pages/HomePage.js",["118"],"/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/pages/DetailPage.js",["119","120","121"],"/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/components/CardDetail.js",["122"],"/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/router/Router.js",[],"/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/pages/Register.js",[],"/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/pages/Login.js",["123","124","125"],"/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/pages/ProfilePage.js",["126","127"],"import React, { useState, useEffect } from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport LocalMallIcon from \"@material-ui/icons/LocalMall\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport CKEditor from \"ckeditor4-react\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { putDataWithToken } from \"../helper/FetchData\";\r\nimport axios from \"axios\";\r\n\r\n//STYLE\r\n\r\nconst CssTextField = withStyles({\r\n  root: {\r\n    width: \"40%\",\r\n    \"& label.Mui-focused\": {\r\n      color: \"green\",\r\n    },\r\n    \"& .MuiInput-underline:after\": {\r\n      borderBottomColor: \"green\",\r\n    },\r\n    \"& .MuiOutlinedInput-root\": {\r\n      \"& fieldset\": {\r\n        borderColor: \"#cfccdf\",\r\n      },\r\n      \"&:hover fieldset\": {\r\n        borderColor: \"#e9967a\",\r\n      },\r\n      \"&.Mui-focused fieldset\": {\r\n        borderColor: \"green\",\r\n      },\r\n    },\r\n  },\r\n})(TextField);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100vh\",\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  form: {\r\n    marginTop: \"3rem\",\r\n    alignItems: \"center\",\r\n    paddingLeft: \"20%\",\r\n    paddingRight: \"5%\",\r\n  },\r\n  form2: {\r\n    marginTop: \"3rem\",\r\n    alignItems: \"center\",\r\n  },\r\n  margin: {\r\n    margin: 2,\r\n    marginTop: 13,\r\n  },\r\n  address: {\r\n    marginTop: 13,\r\n    margin: 2,\r\n    width: \"80.5%\",\r\n  },\r\n  bio: {\r\n    margin: 2,\r\n    marginTop: 13,\r\n  },\r\n  button: {\r\n    marginTop: 13,\r\n    width: \"80.7%\",\r\n  },\r\n}));\r\n\r\n// FUNCTION\r\n\r\nconst ProfilePage = () => {\r\n  const [data, setData] = useState();\r\n  const classes = useStyles();\r\n  const matches = useMediaQuery(\"(min-width:750px)\");\r\n\r\n  const history = useHistory();\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    first_name: Yup.string().max(200, \"Title is too long\"),\r\n    last_name: Yup.string().max(200, \"Title is too long\"),\r\n    address: Yup.string().max(200, \"Title is too long\"),\r\n    country: Yup.string().max(200, \"Title is too long\"),\r\n    phone: Yup.string().max(200, \"Title is too long\"),\r\n    bio: Yup.string().max(200, \"Title is too long\"),\r\n  });\r\n\r\n  const initialValues = {\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    country: \"\",\r\n    phone: \"\",\r\n    bio: \"\",\r\n    address: \"\",\r\n  };\r\n\r\n  const onSubmit = (values) => {\r\n    putDataWithToken(\r\n      \"https://blog-backend-ysf.herokuapp.com/user/profile/\",\r\n      values\r\n    )\r\n      .then((data) => {\r\n        history.push(\"/profile\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema,\r\n    onSubmit,\r\n  });\r\n\r\n  const fetchData = async () => {\r\n    const Token = localStorage.getItem(\"Token\");\r\n    const res = await axios.get(\r\n      `https://blog-backend-ysf.herokuapp.com/user/profile/`,\r\n      {\r\n        headers: {\r\n          Authorization: `Token ${Token}`,\r\n        },\r\n      }\r\n    );\r\n    formik.values.first_name = res?.data?.first_name;\r\n    formik.values.last_name = res?.data?.last_name;\r\n    formik.values.address = res?.data?.address;\r\n    formik.values.bio = res?.data?.bio;\r\n    formik.values.phone = res?.data?.phone;\r\n    formik.values.country = res?.data?.country;\r\n    setData(res?.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <Grid item xs={12} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LocalMallIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Profile\r\n          </Typography>\r\n          <form\r\n            className={matches ? classes.form : classes.form2}\r\n            onSubmit={formik.handleSubmit}\r\n          >\r\n            <CssTextField\r\n              defaultValue={data?.phone}\r\n              className={classes.margin}\r\n              style={{ width: matches ? \"40%\" : \"100%\" }}\r\n              variant=\"outlined\"\r\n              id=\"first_name\"\r\n              name=\"first_name\"\r\n              label=\"First Name\"\r\n              onChange={formik.handleChange}\r\n              value={formik.values.fist_name}\r\n              onBlur={formik.handleBlur}\r\n              {...formik.getFieldProps(\"first_name\")}\r\n              error={formik.touched.first_name && formik.errors.first_name}\r\n              helperText={formik.touched.first_name && formik.errors.first_name}\r\n            />\r\n            <CssTextField\r\n              className={classes.margin}\r\n              style={{ width: matches ? \"40%\" : \"100%\" }}\r\n              id=\"last_name\"\r\n              name=\"last_name\"\r\n              label=\"Last Name\"\r\n              variant=\"outlined\"\r\n              onChange={formik.handleChange}\r\n              value={formik.values.last_name}\r\n              onBlur={formik.handleBlur}\r\n              {...formik.getFieldProps(\"last_name\")}\r\n              error={formik.touched.last_name && formik.errors.last_name}\r\n              helperText={formik.touched.last_name && formik.errors.last_name}\r\n            />\r\n\r\n            <CssTextField\r\n              className={classes.margin}\r\n              style={{ width: matches ? \"40%\" : \"100%\" }}\r\n              variant=\"outlined\"\r\n              id=\"country\"\r\n              name=\"country\"\r\n              label=\"Country\"\r\n              onChange={formik.handleChange}\r\n              value={formik.values.country}\r\n              onBlur={formik.handleBlur}\r\n              {...formik.getFieldProps(\"country\")}\r\n              error={formik.touched.country && formik.errors.country}\r\n              helperText={formik.touched.country && formik.errors.country}\r\n            />\r\n\r\n            <CssTextField\r\n              className={classes.margin}\r\n              style={{ width: matches ? \"40%\" : \"100%\" }}\r\n              variant=\"outlined\"\r\n              id=\"phone\"\r\n              name=\"phone\"\r\n              label=\"Phone\"\r\n              onChange={formik.handleChange}\r\n              value={formik.values.phone}\r\n              onBlur={formik.handleBlur}\r\n              {...formik.getFieldProps(\"phone\")}\r\n              error={formik.touched.phone && formik.errors.phone}\r\n              helperText={formik.touched.phone && formik.errors.phone}\r\n            />\r\n            <CssTextField\r\n              className={classes.address}\r\n              style={{ width: matches ? \"80.7%\" : \"100%\" }}\r\n              variant=\"outlined\"\r\n              id=\"adress\"\r\n              name=\"address\"\r\n              label=\"Address\"\r\n              onChange={formik.handleChange}\r\n              value={formik.values.address}\r\n              onBlur={formik.handleBlur}\r\n              {...formik.getFieldProps(\"address\")}\r\n              error={formik.touched.address && formik.errors.address}\r\n              helperText={formik.touched.address && formik.errors.address}\r\n            />\r\n\r\n            <CssTextField\r\n              className={classes.bio}\r\n              style={{ width: matches ? \"80.7%\" : \"100%\" }}\r\n              variant=\"outlined\"\r\n              id=\"bio\"\r\n              name=\"bio\"\r\n              label=\"Biografy\"\r\n              multiline\r\n              rows={8}\r\n              onChange={formik.handleChange}\r\n              value={formik.values.bio}\r\n              onBlur={formik.handleBlur}\r\n              {...formik.getFieldProps(\"bio\")}\r\n              error={formik.touched.bio && formik.errors.bio}\r\n              helperText={formik.touched.bio && formik.errors.bio}\r\n            />\r\n\r\n            <Button\r\n              color=\"primary\"\r\n              style={{\r\n                width: matches ? \"80.7%\" : \"100%\",\r\n                marginTop: matches ? null : 30,\r\n              }}\r\n              variant=\"contained\"\r\n              fullWidth\r\n              type=\"submit\"\r\n              className={classes.button}\r\n            >\r\n              Update\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\nexport default ProfilePage;\r\n",["128","129"],"/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/components/CardList.js",[],"/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/pages/PostPage.js",["130"],"import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport LocalMallIcon from \"@material-ui/icons/LocalMall\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport CKEditor from \"ckeditor4-react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useHistory } from \"react-router-dom\";\nimport { postDataWithToken } from \"../helper/FetchData\";\n\n// STYLE\n\nconst CssTextField = withStyles({\n  root: {\n    width: \"40%\",\n    \"& label.Mui-focused\": {\n      color: \"green\",\n    },\n    \"& .MuiInput-underline:after\": {\n      borderBottomColor: \"green\",\n    },\n    \"& .MuiOutlinedInput-root\": {\n      \"& fieldset\": {\n        borderColor: \"#cfccdf\",\n      },\n      \"&:hover fieldset\": {\n        borderColor: \"#e9967a\",\n      },\n      \"&.Mui-focused fieldset\": {\n        borderColor: \"green\",\n      },\n    },\n  },\n})(TextField);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    overflow: \"hidden\",\n  },\n\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.primary.main,\n  },\n  form: {\n    marginTop: \"3rem\",\n    alignItems: \"center\",\n    width: \"80%\",\n    paddingLeft: \"10%\",\n  },\n  form2: {\n    marginTop: \"3rem\",\n    alignItems: \"center\",\n    width: \"100%\",\n  },\n  margin: {\n    margin: 2,\n    marginTop: 13,\n  },\n  address: {\n    marginTop: 13,\n    margin: 2,\n    width: \"80.5%\",\n  },\n  bio: {\n    margin: 2,\n    marginTop: 13,\n  },\n  button: {\n    marginTop: 13,\n    width: \"80.7%\",\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 500,\n    display: \"block\",\n    marginLeft: -0.1,\n    width: \"40%\",\n    \"& label.Mui-focused\": {\n      color: \"green\",\n    },\n    \"& .MuiInput-underline:after\": {\n      borderBottomColor: \"green\",\n    },\n    \"& .MuiOutlinedInput-root\": {\n      \"& fieldset\": {\n        borderColor: \"#cfccdf\",\n      },\n      \"&:hover fieldset\": {\n        borderColor: \"#e9967a\",\n      },\n      \"&.Mui-focused fieldset\": {\n        borderColor: \"green\",\n      },\n    },\n  },\n}));\n\n//FUNCTION\n\nconst PostPage = () => {\n  const classes = useStyles();\n  const matches = useMediaQuery(\"(min-width:750px)\");\n\n  const history = useHistory();\n\n  const validationSchema = Yup.object().shape({\n    title: Yup.string()\n      .required(\"you must write a title\")\n      .max(100, \"Title is too long\"),\n    content: Yup.string().required(\"You must write something\"),\n    image: Yup.string(),\n    status: Yup.string(),\n  });\n\n  const initialValues = {\n    title: \"\",\n    content: \"\",\n    image: \"\",\n    status: \"\",\n  };\n\n  const onSubmit = (values) => {\n    postDataWithToken(\"https://blog-backend-ysf.herokuapp.com/create/\", values)\n      .then((data) => {\n        history.push(\"/\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const formik = useFormik({\n    initialValues,\n    validationSchema,\n    onSubmit,\n  });\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <Grid item xs={12} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LocalMallIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Create New Post\n          </Typography>\n          <form\n            className={matches ? classes.form : classes.form2}\n            onSubmit={formik.handleSubmit}\n          >\n            <CssTextField\n              className={classes.margin}\n              style={{ width: matches ? \"80.5%\" : \"100%\" }}\n              variant=\"outlined\"\n              id=\"title\"\n              name=\"title\"\n              label=\"Title\"\n              onChange={formik.handleChange}\n              value={formik.values.title}\n              onBlur={formik.handleBlur}\n              {...formik.getFieldProps(\"title\")}\n              error={formik.touched.title && formik.errors.title}\n              helperText={formik.touched.title && formik.errors.title}\n            />\n            <CssTextField\n              className={classes.margin}\n              style={{ width: matches ? \"80.5%\" : \"100%\" }}\n              id=\"image\"\n              name=\"image\"\n              label=\"Image URL\"\n              variant=\"outlined\"\n              onChange={formik.handleChange}\n              value={formik.values.image}\n              onBlur={formik.handleBlur}\n              {...formik.getFieldProps(\"image\")}\n              error={formik.touched.image && formik.errors.image}\n              helperText={formik.touched.image && formik.errors.image}\n            />\n            {/* {\n                matches\n                ?\n                <div className=\"App\" style={{  marginTop:20,width: matches ? \"80.5%\" : \"100%\" }}>\n            \n                <CKEditor\n                    id=\"content\"\n                    name = 'content'\n                    editor={ ClassicEditor }\n                    onChange={(event) => formik.handleChange(event)}\n                    value = {formik.values.content}\n                    onBlur={(event) => formik.handleBlur(event)}\n                    {...formik.getFieldProps('content')}\n                    error={formik.touched.content && formik.errors.content }\n                   type=\"classic\"\n                  //  data =  {formik.values.content}\n                   readOnly={false}\n                />\n            </div>\n                : */}\n            <CssTextField\n              className={classes.margin}\n              style={{ width: matches ? \"80.5%\" : \"100%\" }}\n              variant=\"outlined\"\n              multiline\n              rows={8}\n              id=\"content\"\n              name=\"content\"\n              label=\"Content\"\n              onChange={formik.handleChange}\n              value={formik.values.content}\n              onBlur={formik.handleBlur}\n              {...formik.getFieldProps(\"content\")}\n              error={formik.touched.content && formik.errors.content}\n              helperText={formik.touched.content && formik.errors.content}\n            />\n\n            <FormControl variant=\"outlined\" className={classes.formControl}>\n              <InputLabel htmlFor=\"outlined-age-native-simple\">\n                Status\n              </InputLabel>\n              <Select\n                native\n                value={formik.values.status}\n                onChange={formik.handleChange}\n                label=\"Status\"\n                name=\"status\"\n                inputProps={{\n                  name: \"status\",\n                  id: \"outlined-age-native-simple\",\n                }}\n              >\n                <option aria-label=\"None\" value=\"\" />\n                <option value={\"d\"} label=\"draft\" />\n                <option value={\"p\"} label=\"published\" />\n              </Select>\n            </FormControl>\n            <Button\n              color=\"primary\"\n              style={{\n                width: matches ? \"80.7%\" : \"100%\",\n                marginTop: matches ? null : 30,\n              }}\n              variant=\"contained\"\n              fullWidth\n              type=\"submit\"\n              className={classes.button}\n            >\n              Create\n            </Button>\n          </form>\n        </div>\n      </Grid>\n    </Grid>\n  );\n};\nexport default PostPage;\n","/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/pages/UpdatePage.js",["131","132","133"],"import React, { useEffect, useState } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport LocalMallIcon from \"@material-ui/icons/LocalMall\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport CKEditor from \"ckeditor4-react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useHistory } from \"react-router-dom\";\nimport { putDataWithToken } from \"../helper/FetchData\";\nimport { toast } from \"react-toastify\";\nimport axios from \"axios\";\nimport { useParams } from \"react-router-dom\";\n\n//STYLE\n\nconst CssTextField = withStyles({\n  root: {\n    width: \"40%\",\n    \"& label.Mui-focused\": {\n      color: \"green\",\n    },\n    \"& .MuiInput-underline:after\": {\n      borderBottomColor: \"green\",\n    },\n    \"& .MuiOutlinedInput-root\": {\n      \"& fieldset\": {\n        borderColor: \"#cfccdf\",\n      },\n      \"&:hover fieldset\": {\n        borderColor: \"#e9967a\",\n      },\n      \"&.Mui-focused fieldset\": {\n        borderColor: \"green\",\n      },\n    },\n  },\n})(TextField);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    overflow: \"hidden\",\n  },\n\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.primary.main,\n  },\n  form: {\n    marginTop: \"3rem\",\n    alignItems: \"center\",\n    width: \"80%\",\n    paddingLeft: \"10%\",\n  },\n  form2: {\n    marginTop: \"3rem\",\n    alignItems: \"center\",\n    width: \"100%\",\n  },\n  margin: {\n    margin: 2,\n    marginTop: 13,\n  },\n  address: {\n    marginTop: 13,\n    margin: 2,\n    width: \"80.5%\",\n  },\n  bio: {\n    margin: 2,\n    marginTop: 13,\n  },\n  button: {\n    marginTop: 13,\n    width: \"80.7%\",\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 500,\n    display: \"block\",\n    marginLeft: -0.1,\n    width: \"40%\",\n    \"& label.Mui-focused\": {\n      color: \"green\",\n    },\n    \"& .MuiInput-underline:after\": {\n      borderBottomColor: \"green\",\n    },\n    \"& .MuiOutlinedInput-root\": {\n      \"& fieldset\": {\n        borderColor: \"#cfccdf\",\n      },\n      \"&:hover fieldset\": {\n        borderColor: \"#e9967a\",\n      },\n      \"&.Mui-focused fieldset\": {\n        borderColor: \"green\",\n      },\n    },\n  },\n}));\n\n//FUNCTION\n\nconst UpdatePage = () => {\n  const [data, setData] = useState();\n  const classes = useStyles();\n  const matches = useMediaQuery(\"(min-width:750px)\");\n\n  const history = useHistory();\n  const { slug } = useParams();\n\n  const fetchData = async () => {\n    const res = await axios.get(\n      `https://blog-backend-ysf.herokuapp.com/${slug}/detail`\n    );\n    formik.values.title = res?.data?.title;\n    formik.values.image = res?.data?.image;\n    formik.values.content = res?.data?.content;\n    formik.values.status = res?.data?.status;\n    setData(res?.data);\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const validationSchema = Yup.object().shape({\n    title: Yup.string()\n      .required(\"you must write a title\")\n      .max(100, \"Title is too long\"),\n    content: Yup.string().required(\"You must write something\"),\n    image: Yup.string(),\n    status: Yup.string(),\n  });\n\n  const initialValues = {\n    title: \"\",\n    content: \"\",\n    image: \"\",\n    status: \"\",\n  };\n\n  const onSubmit = (values) => {\n    const response = putDataWithToken(\n      `https://blog-backend-ysf.herokuapp.com/${slug}/update/`,\n      values\n    )\n      .then((data) => {\n        history.push(`/${slug}/detail/`);\n      })\n      .catch((err) => {\n        toast.error(err.message || \" an error occured\");\n      });\n  };\n\n  const formik = useFormik({\n    initialValues,\n    validationSchema,\n    onSubmit,\n  });\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <Grid item xs={12} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LocalMallIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Update Post\n          </Typography>\n          <form\n            className={matches ? classes.form : classes.form2}\n            onSubmit={formik.handleSubmit}\n          >\n            <CssTextField\n              defaultValue={data?.title}\n              className={classes.margin}\n              style={{ width: matches ? \"80.5%\" : \"100%\" }}\n              variant=\"outlined\"\n              id=\"title\"\n              name=\"title\"\n              label=\"Title\"\n              onChange={formik.handleChange}\n              value={formik.values.title}\n              onBlur={formik.handleBlur}\n              {...formik.getFieldProps(\"title\")}\n              error={formik.touched.title && formik.errors.title}\n              helperText={formik.touched.title && formik.errors.title}\n            />\n            <CssTextField\n              className={classes.margin}\n              style={{ width: matches ? \"80.5%\" : \"100%\" }}\n              id=\"image\"\n              name=\"image\"\n              label=\"Image URL\"\n              variant=\"outlined\"\n              onChange={formik.handleChange}\n              value={formik.values.image}\n              onBlur={formik.handleBlur}\n              {...formik.getFieldProps(\"image\")}\n              error={formik.touched.image && formik.errors.image}\n              helperText={formik.touched.image && formik.errors.image}\n            />\n            {/* {\n                matches\n                ?\n                <div className=\"App\" style={{  marginTop:20,width: matches ? \"80.5%\" : \"100%\" }}>\n            \n                <CKEditor\n                    id=\"content\"\n                    name = 'content'\n                    editor={ ClassicEditor }\n                    onChange={(event) => formik.handleChange(event)}\n                    value = {formik.values.content}\n                    onBlur={(event) => formik.handleBlur(event)}\n                    {...formik.getFieldProps('content')}\n                    error={formik.touched.content && formik.errors.content }\n                   type=\"classic\"\n                  //  data =  {formik.values.content}\n                   readOnly={false}\n                />\n            </div>\n                : */}\n            <CssTextField\n              className={classes.margin}\n              style={{ width: matches ? \"80.5%\" : \"100%\" }}\n              variant=\"outlined\"\n              multiline\n              rows={8}\n              id=\"content\"\n              name=\"content\"\n              label=\"Content\"\n              onChange={formik.handleChange}\n              value={formik.values.content}\n              onBlur={formik.handleBlur}\n              {...formik.getFieldProps(\"content\")}\n              error={formik.touched.content && formik.errors.content}\n              helperText={formik.touched.content && formik.errors.content}\n            />\n\n            <FormControl variant=\"outlined\" className={classes.formControl}>\n              <InputLabel htmlFor=\"outlined-age-native-simple\">\n                Status\n              </InputLabel>\n              <Select\n                native\n                value={formik.values.status}\n                onChange={formik.handleChange}\n                label=\"Status\"\n                name=\"status\"\n                inputProps={{\n                  name: \"status\",\n                  id: \"outlined-age-native-simple\",\n                }}\n              >\n                <option aria-label=\"None\" value=\"\" />\n                <option value={\"d\"} label=\"draft\" />\n                <option value={\"p\"} label=\"published\" />\n              </Select>\n            </FormControl>\n            <Button\n              color=\"primary\"\n              style={{\n                width: matches ? \"80.7%\" : \"100%\",\n                marginTop: matches ? null : 30,\n              }}\n              variant=\"contained\"\n              fullWidth\n              type=\"submit\"\n              className={classes.button}\n            >\n              Update\n            </Button>\n          </form>\n        </div>\n      </Grid>\n    </Grid>\n  );\n};\nexport default UpdatePage;\n","/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/services/PostData.js",[],"/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/context/AuthContext.js",[],"/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/helper/FetchData.js",[],["134","135"],"/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/components/MenuComponent.js",["136"],"/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/components/PaginationButtons.js",[],"/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/components/SliderComponent.js",[],"/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/components/SliderText.js",[],"/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/components/Footer.js",[],"/Users/ysf/Desktop/GITHUB/Assignments/django/projects/react_django_frontend/src/components/HomeButton.js",[],{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","severity":1,"message":"142","line":24,"column":5,"nodeType":"143","messageId":"144","endLine":24,"endColumn":15},{"ruleId":"137","replacedBy":"145"},{"ruleId":"139","replacedBy":"146"},{"ruleId":"137","replacedBy":"147"},{"ruleId":"139","replacedBy":"148"},{"ruleId":"149","severity":1,"message":"150","line":88,"column":10,"nodeType":"151","messageId":"152","endLine":88,"endColumn":17},{"ruleId":"153","severity":1,"message":"154","line":26,"column":6,"nodeType":"155","endLine":26,"endColumn":12,"suggestions":"156"},{"ruleId":"149","severity":1,"message":"157","line":7,"column":10,"nodeType":"151","messageId":"152","endLine":7,"endColumn":25},{"ruleId":"149","severity":1,"message":"158","line":25,"column":9,"nodeType":"151","messageId":"152","endLine":25,"endColumn":16},{"ruleId":"153","severity":1,"message":"159","line":59,"column":6,"nodeType":"155","endLine":59,"endColumn":8,"suggestions":"160"},{"ruleId":"153","severity":1,"message":"161","line":141,"column":6,"nodeType":"155","endLine":141,"endColumn":8,"suggestions":"162"},{"ruleId":"149","severity":1,"message":"163","line":10,"column":8,"nodeType":"151","messageId":"152","endLine":10,"endColumn":11},{"ruleId":"149","severity":1,"message":"164","line":17,"column":17,"nodeType":"151","messageId":"152","endLine":17,"endColumn":31},{"ruleId":"165","severity":1,"message":"166","line":118,"column":10,"nodeType":"167","endLine":120,"endColumn":11},{"ruleId":"149","severity":1,"message":"168","line":12,"column":8,"nodeType":"151","messageId":"152","endLine":12,"endColumn":16},{"ruleId":"153","severity":1,"message":"169","line":155,"column":6,"nodeType":"155","endLine":155,"endColumn":8,"suggestions":"170"},{"ruleId":"137","replacedBy":"171"},{"ruleId":"139","replacedBy":"172"},{"ruleId":"149","severity":1,"message":"168","line":15,"column":8,"nodeType":"151","messageId":"152","endLine":15,"endColumn":16},{"ruleId":"149","severity":1,"message":"168","line":15,"column":8,"nodeType":"151","messageId":"152","endLine":15,"endColumn":16},{"ruleId":"153","severity":1,"message":"169","line":143,"column":6,"nodeType":"155","endLine":143,"endColumn":8,"suggestions":"173"},{"ruleId":"149","severity":1,"message":"174","line":162,"column":11,"nodeType":"151","messageId":"152","endLine":162,"endColumn":19},{"ruleId":"137","replacedBy":"175"},{"ruleId":"139","replacedBy":"176"},{"ruleId":"149","severity":1,"message":"177","line":137,"column":13,"nodeType":"151","messageId":"152","endLine":137,"endColumn":16},"no-native-reassign",["178"],"no-negated-in-lhs",["179"],"no-dupe-keys","Duplicate key 'marginLeft'.","ObjectExpression","unexpected",["178"],["179"],["178"],["179"],"no-unused-vars","'isLogin' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchDataList'. Either include it or remove the dependency array.","ArrayExpression",["180"],"'fetchDataDetail' is defined but never used.","'classes' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchDataDetail'. Either include it or remove the dependency array.",["181"],"React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array. If 'fetchData' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["182"],"'Box' is defined but never used.","'ToastContainer' is defined but never used.","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","'CKEditor' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["183"],["178"],["179"],["184"],"'response' is assigned a value but never used.",["178"],["179"],"'res' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"185","fix":"186"},{"desc":"187","fix":"188"},{"desc":"189","fix":"190"},{"desc":"189","fix":"191"},{"desc":"189","fix":"192"},"Update the dependencies array to be: [fetchDataList, page]",{"range":"193","text":"194"},"Update the dependencies array to be: [fetchDataDetail]",{"range":"195","text":"196"},"Update the dependencies array to be: [fetchData]",{"range":"197","text":"198"},{"range":"199","text":"198"},{"range":"200","text":"198"},[827,833],"[fetchDataList, page]",[1573,1575],"[fetchDataDetail]",[3727,3729],"[fetchData]",[3893,3895],[3434,3436]]